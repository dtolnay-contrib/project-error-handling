### References Are Collected Here

#### Intro Summary
#### Generalities of Error Handling
#### Rust's Idioms for Handling Errors 

#### Advanced Error Design Patterns
https://rust-lang-nursery.github.io/failure/guidance.html

#### Error Anti-Patterns
#### FFI
#### Glossary
#### Appendices/Additional Resources

#### Uncategorized
http://www.open-std.org/jtc1/sc22/wg14/www/docs/n2429.pdf
https://250bpm.com/blog:12/
https://archive.fosdem.org/2020/schedule/event/the_history_of_error_correction_and_detection_and_how_it_led_to_ceph_s_erasure_coding_techniques/
https://arzg.github.io/lang/18/
https://blog.rust-lang.org/2016/08/10/Shape-of-errors-to-come.html
https://blog.rust-lang.org/2020/12/11/lock-poisoning-survey.html
https://blog.rust-lang.org/inside-rust/2020/11/23/What-the-error-handling-project-group-is-working-on.html
https://blog.rust-lang.org/inside-rust/2020/11/23/What-the-error-handling-project-group-is-working-on.html#one-standardized-error-trait
https://blog.yoshuawuyts.com/error-handling-survey/
https://boats.gitlab.io/blog/post/the-problem-of-effects/
https://boats.gitlab.io/failure/
https://bryce.fisher-fleig.org/strategies-for-returning-references-in-rust/
https://crates.io/crates/anyhow
https://crates.io/crates/extracterr
https://crates.io/crates/eyre
https://crates.io/crates/failure
https://crates.io/crates/thiserror
https://deterministic.space/hook-into-rustc-errors.html
https://dev.to/cad97/try-fn-without-special-casing-result-4m5b
https://dev.to/e_net4/migrating-from-quick-error-to-snafu-a-story-on-revamped-error-handling-in-rust-58h9
https://doc.rust-lang.org/error-index.html
https://docs.rs/adhocerr/0.1.2/adhocerr/
https://docs.rs/color-eyre/0.5.4/color_eyre/section/trait.Section.html
https://docs.rs/color-eyre/0.5.4/src/color_eyre/lib.rs.html#397-408
https://docs.rs/error/0.1.9/error/macro.match_error.html
https://docs.rs/error/0.1.9/src/error/lib.rs.html#99-115
https://docs.rs/http-types/2.4.0/http_types/struct.Error.html
https://dr-knz.net/go-errors-vs-exceptions-2020.html
https://edgarluque.com/blog/wrapping-errors-in-rust
https://fuchsia.dev/fuchsia-src/concepts/kernel/exceptions
https://gcc.gnu.org/legacy-ml/gcc-help/2009-10/msg00195.html
https://gendignoux.com/blog/2021/04/01/rust-async-streams-futures-part1.html
https://github.com/Peternator7/strum/wiki/Derive-EnumProperty
https://github.com/apple/swift-evolution/blob/master/proposals/0276-multi-pattern-catch-clauses.md
https://github.com/fusion-engineering-forks/rfcs/blob/panic/text/0000-panic-plan.md
https://github.com/must-compute/the-rust-error-book
https://github.com/rust-lang/project-error-handling/blob/master/CHARTER.md
https://github.com/rust-lang/project-error-handling/issues/3
https://github.com/rust-lang/project-error-handling/issues/7
https://github.com/rust-lang/rfcs/blob/master/text/2965-project-error-handling.md
https://github.com/rust-lang/rust/issues/66731
https://github.com/rust-lang/rust/pull/72981#issuecomment-707405697
https://github.com/rust-lang/rust/pull/75180
https://github.com/seanchen1991/blog/blob/main/posts/extending-minigrep/index.md
https://github.com/yaahc/rfcs/blob/master/text/0000-dyn-error-generic-member-access.md
https://hackmd.io/@kQlAmwdASwqEXB8JsIkvyw/H1V0MKFvw
https://haskellweekly.news/episode/35.html
https://huonw.github.io/blog/2014/06/error-handling-in-rust-knn-case-study/
https://internals.rust-lang.org/t/ideas-around-anonymous-enum-types/12627
https://internals.rust-lang.org/t/lifetime-parameter-default-value/1722
https://matklad.github.io/2020/10/15/study-of-std-io-error.html
https://mbuffett.com/posts/rust-less-error-handling/
https://meltware.com/2020/10/21/rust-async-nonsense.html
https://ncbi.github.io/cxx-toolkit/pages/ch_debug
https://nick.groenen.me/posts/rust-error-handling/
https://paper.dropbox.com/doc/Collaborative-Summary-3-Fact-Finding-Pre-RFCs-around-Error-Handling-Reporting-dnShKo1SsHtdF4Yheeoco
https://pingcap.com/blog/rust-huge-compilation-units
https://rpeszek.github.io/posts/2021-01-17-maybe-overuse.html
https://rustc-dev-guide.rust-lang.org/panic-implementation.html?highlight=panic_handler#panicking-in-rust
https://saidvandeklundert.net/learn/2021-09-01-rust-option-and-result/
https://sled.rs/errors
https://smallcultfollowing.com/babysteps/blog/2015/01/14/little-orphan-impls/
https://smallcultfollowing.com/babysteps/blog/2018/04/24/rust-pattern-precise-closure-capture-clauses/
https://tarquin-the-brave.github.io/blog/posts/collecting-all-the-errors/
https://taylor.fausak.me/2021/04/03/default-exception-handler-in-haskell/
https://users.rust-lang.org/t/an-essay-of-checked-exceptions-in-rust/57769
https://vorner.github.io/2020/04/13/hyper-traps.html
https://vorner.github.io/2021/01/03/dark-side-of-posix-apis.html
https://www.boost.org/community/exception_safety.html
https://www.eyalkalderon.com/nom-error-recovery/
https://www.fpcomplete.com/blog/async-exceptions-haskell-rust/
https://www.fpcomplete.com/blog/error-handling-is-hard/
https://www.hackingwithswift.com/new-syntax-swift-2-error-handling-try-catch
https://www.halcyon.hr/posts/error-handling-in-rust/
https://www.haskellforall.com/2021/01/dynamic-type-errors-lack-relevance.html
https://www.modernescpp.com/index.php/c-core-guidelines-rules-to-error-handling
https://www.ralfj.de/blog/2019/11/25/how-to-panic-in-rust.html
https://yaah.dev/building-your-own-error-type
https://yaah.dev/try-blocks
